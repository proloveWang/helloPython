# 这个文档演示格式化输出
# 格式化方式一： 占位符
name = "zhangsan"
age = 8
price = 3.8
print("%s今年%d岁了，可以去小卖部买东西了，购买了一个包烟花了%f元" % (name, age, price))

"""
我们可以使用辅助符号"m.n"来控制数据的宽度和精度
m，控制宽度，要求是数字（很少使用）,设置的宽度小于数字自身，不生效
.n，控制小数点精度，要求是数字，会进行小数的四舍五入
示例：
%3d：表示将整数的宽度控制在3位，如数字11，被设置为3d，就会变成：[空格]11，用1个空格补足宽度。
%8.2f：表示将宽度控制为8，将小数点精度设置为2
      小数点和小数部分也算入宽度计算。如，对3.1415设置了%8.2f 后，结果是：[空格][空格]3.1415。2个空格补足宽度，小数部分限制2位精度后，四舍五入为 .14
%.2f：表示不限制宽度，只设置小数点精度为2，如3.1415设置%.2f后，结果是3.14
"""
# 03d 宽度是3位，不满足三位，要补0
# 5.2f  宽度是5位，小数点后保留2位，中间的.也算一位
print("%s今年%03d岁了，可以去小卖部买东西了，购买了一个包烟花了%5.2f元" % (name, age, price))

# 格式化方式一：  f字符串(快速格式化)
print(f"{name}今年{age}岁了，可以去小卖部买东西了，购买了一个包烟花了{price}元")

# 为了拼接这句话，不能str拼接吗？答案是可以，但是坑比较多
# 以下代码会报错，原因是：字符串拼接，必须全部都是字符串，不能字符串和其他数据类型拼接，否则报错
# print(name+"今年"+age+"岁了，可以去小卖部买东西了，购买了一个包烟花了"+price+"元")
print(name + "今年" + str(age) + "岁了，可以去小卖部买东西了，购买了一个包烟花了" + str(price) + "元")
