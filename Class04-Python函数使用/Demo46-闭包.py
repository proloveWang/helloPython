# 闭包(不是 python 独有的)
# 解释：如果在一个函数的内部定义了另一个函数，外部的我们叫他外函数，内部的我们叫他内函数。
# 闭包：在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用。这样就构成了一个闭包。
# 闭包(Closure)是词法闭包(Lexical Closure)的简称，是函数式编程的重要语法结构。如果一个函数里定义了一个内部函数，这个函数引用了外部函数的相关参数或变量，外部函数最终把这个内部函数返回了，那么这个内部函数被称为闭包。举个例子：
def func(x):
       def inner(y):
               return x + y
       return inner
f = func(2)
print(f)
print(f(8))
print(func(2)(8))
# 运行结果
# <function func.<locals>.inner at 0x0000000006B4F158>
# 10
# 10






#-------------------
print("-------------------")
#-------------------
#-------------------
print("-------------------")
#-------------------




















