# def 函数名(自变量变量名, 自变量变量名1, 自变量变量名2...):
#     函数功能体
#     return 函数功能运行结果

# 1. def 定义函数的关键字
# 2. 函数名,类似于变量名，是我们自定义的名字，符合标识符命名规范，英文字母小写，单词和单词之间使用下划线隔开get_max_value
# 3. () 固定的，来存放自变量的变量名，自变量进行分析的时候看功能中哪些数据是动态变化，就把这个数据提取出来，定义成一个变量名放在()中，在编程语言中称为形式参数,简称形参使用功能的时候， 给自变量赋值【给形参赋值】，给形参赋予的值称为实际参数, 简称实参
# 4. return 是应用在函数中的关键字，作用是结束函数，并把结果返回到调用的位置有些函数功能是没有设置返回值的，只是把return给省略了，当return被省略的时候，函数功能的返回值默认为None， 省略的时候等价于return None

# import "Demo00-Start"

# 完成2个数字相加的功能
def add():
	res = 1+2
	print(f"1+2的结果是：{res}")
add()

#-------------------
print("-------------------")
#-------------------

# 函数的返回值
# 提供一个函数求两个数的和
def add(x,y):
	# 定义两个数相加的函数功能，完成功能后，会将相加的结果返回给函数调用者
	return x+y
# 调用add函数之后计算结果得到返回之后并赋值给sum变量
sum = add(1,2)
print(f"两个数的求和结果是:{sum}")

#-------------------
print("-------------------")
#-------------------

# None类型
def printInfo():
    print("~~~~~~人生苦短，我用python~~~~~~")
# 如果函数中不是用return关键字作为结束或返回数据 默认回值是None
# None也可以主动使用return返回，效果等同于不写return语句
# return None
res = printInfo()
print(res)   # 结果返回值是None
print(type(res))# 结果返回值是<class 'NoneType'>

#-------------------
print("-------------------")
#-------------------

# None作为一个特殊的字面量，用于表示：空、无意义，其有非常多的应用场景。
# 用在函数无返回值上
def check_password(password):
    if password == 123456:
        return "success"
    return None
# 用于if判断上 在if判断中，None等同于False 一般用于在函数中主动返回Nnoe，并配合if判断做相关处理
res = check_password(88888888)
if not res:
    print("您输入的密码不正确")
# 用于声明无内容的变量上 定义变量，但暂时不需要变量有具体子，可以使用None来代替
name = None

#-------------------
print("-------------------")
#-------------------

# 函数是纯代码语言，想要理解其含义，就需要一行行的去阅读理解代码，效率比较低。
# 我们可以给函数添加说明文档，辅助理解函数的作用。
def add(x,y):
    # 通过多行注释的形式，对函数进行说明解释
	"""
	计算两个的数的和
	:param x: 形参x【可以提供具体说明】
	:param y: 形参y【可以提供具体说明】
	:return:  返回值【可以提供具体说明】
	"""
	res = x+y
	return res
print(add(1,2))

#-------------------
print("-------------------")
#-------------------

#
















